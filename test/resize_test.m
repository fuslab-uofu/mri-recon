classdef resize_test < matlab.unittest.TestCase

    methods (TestClassSetup)
        % Shared setup for the entire test class
    end

    methods (TestMethodSetup)
        % Setup for each test
    end

    methods (Test)
        function test_pad_zeros(testCase)
            % pad_to_size example 1
            a = [1, 2, 3; 4, 5, 6];

            actual = pad_to_size(a, [5, 5]);
            expected = [
                0     0     0     0     0
                0     0     0     0     0
                0     1     2     3     0
                0     4     5     6     0
                0     0     0     0     0
                ];

            testCase.assertEqual(actual, expected);
        end

        function test_pad_val(testCase)
            % pad_to_size example 2
            a = [1, 2, 3; 4, 5, 6];

            actual = pad_to_size(a, [4, 6], -10);
            expected = [
                -10   -10   -10   -10   -10   -10
                -10   -10     1     2     3   -10
                -10   -10     4     5     6   -10
                -10   -10   -10   -10   -10   -10
                ];

            testCase.assertEqual(actual, expected);
        end

        function test_crop(testCase)
            % crop_to_size example
            cropIm = crop_to_size(zeros([8, 8, 8, 8]), [3, 4, 5]);

            testCase.assertEqual(size(cropIm), [3, 4, 5, 8]);
        end

        function test_inverse(testCase)
            % Test that crop_to_size exactly undoes the changes made by
            % pad_to_size
            for iter = 1:100
                sz = randi(5, 1, 5);
                szPad = randi(5, 1, 5) + 4;  % smallest of this line is equal to largest of previous

                initial = randn(sz);
                padded = pad_to_size(initial, szPad);
                cropped = crop_to_size(padded, sz);

                testCase.assertEqual(cropped, initial);
            end
        end

        function test_zfi_2d(testCase)
            im = zeros(8, 9);
            im(3:6, [3, 5]) = 1;
            zfi = zfi_to_size(im, [16, 17]);
            expected = [
                -2.62757653678626e-18	-9.08437239338691e-18	-4.46706086904686e-18	1.45765139914635e-17	2.61820485928747e-17	1.57498198600898e-17	6.76019535611774e-19	3.23716237770028e-18	1.55104687263809e-17	1.45139562868724e-17	2.48424301466026e-19	-7.22957548828132e-18	-2.34569408527437e-18	7.79294409955138e-19	-3.59329012519916e-18	-5.24320680365004e-18	-1.37178054953178e-18
-0.00736769988845388	0.0101546706231827	0.00859610485499345	-0.0230773421357410	-0.0420855575209390	-0.0220354953735331	-0.000274249129333953	-0.0152891296078048	-0.0405745100571675	-0.0302405420423861	0.00323872321910141	0.0128023753610753	-0.00406057148512436	-0.00909805982660662	0.00509229351993320	0.00768224197323779	-0.00674473492262170
1.60326471831536e-17	3.69172044906224e-18	-6.35293562033751e-18	2.06808531745874e-18	1.19763779862972e-17	2.79746269662672e-18	-1.39998792325711e-17	-1.51017959922895e-17	-4.18674870625494e-18	-1.63860062817568e-18	-7.20877661911142e-18	-3.90425831560819e-18	7.01920069012355e-18	7.06114100332878e-18	-3.79750982304136e-18	-4.30255954281788e-18	9.84642915415676e-18
0.0240332353630027	-0.0331242576130411	-0.0280402587392117	0.0752776583598320	0.137281936641989	0.0718791827395688	0.000894593152974473	0.0498727222773640	0.132352941176471	0.0986438203798714	-0.0105646264884196	-0.0417609979934723	0.0132454730360591	0.0296776221167990	-0.0166109220726865	-0.0250592630337318	0.0220011406966316
0.0480664707260054	-0.0662485152260821	-0.0560805174784233	0.150555316719664	0.274563873283978	0.143758365479138	0.00178918630594891	0.0997454445547280	0.264705882352941	0.197287640759743	-0.0211292529768392	-0.0835219959869445	0.0264909460721181	0.0593552442335979	-0.0332218441453729	-0.0501185260674635	0.0440022813932633
0.0554341706144593	-0.0764031858492649	-0.0646766223334168	0.173632658855405	0.316649430804917	0.165793860852671	0.00206343543528292	0.115034574162533	0.305280392410109	0.227528182802129	-0.0243679761959405	-0.0963243713480198	0.0305515175572425	0.0684533040602046	-0.0383141376653061	-0.0578007680407013	0.0507470163158850
0.0480664707260053	-0.0662485152260821	-0.0560805174784233	0.150555316719664	0.274563873283978	0.143758365479138	0.00178918630594898	0.0997454445547280	0.264705882352941	0.197287640759743	-0.0211292529768391	-0.0835219959869445	0.0264909460721181	0.0593552442335979	-0.0332218441453729	-0.0501185260674635	0.0440022813932633
0.0424274773621065	-0.0584764668088491	-0.0495013436566651	0.132892683722926	0.242352982073756	0.126893127472320	0.00157928510967560	0.0880436513623491	0.233651496802524	0.174142531909021	-0.0186504415409067	-0.0737234820957394	0.0233831192055357	0.0523918907089805	-0.0293243714197358	-0.0442387926143079	0.0388400847721002
0.0480664707260054	-0.0662485152260821	-0.0560805174784233	0.150555316719664	0.274563873283978	0.143758365479138	0.00178918630594894	0.0997454445547280	0.264705882352941	0.197287640759743	-0.0211292529768391	-0.0835219959869445	0.0264909460721181	0.0593552442335979	-0.0332218441453729	-0.0501185260674635	0.0440022813932633
0.0554341706144593	-0.0764031858492648	-0.0646766223334168	0.173632658855405	0.316649430804917	0.165793860852671	0.00206343543528290	0.115034574162533	0.305280392410109	0.227528182802129	-0.0243679761959405	-0.0963243713480198	0.0305515175572425	0.0684533040602046	-0.0383141376653061	-0.0578007680407013	0.0507470163158850
0.0480664707260053	-0.0662485152260821	-0.0560805174784233	0.150555316719664	0.274563873283978	0.143758365479138	0.00178918630594898	0.0997454445547280	0.264705882352941	0.197287640759743	-0.0211292529768391	-0.0835219959869445	0.0264909460721181	0.0593552442335979	-0.0332218441453729	-0.0501185260674635	0.0440022813932633
0.0240332353630027	-0.0331242576130410	-0.0280402587392117	0.0752776583598320	0.137281936641989	0.0718791827395688	0.000894593152974457	0.0498727222773640	0.132352941176471	0.0986438203798714	-0.0105646264884196	-0.0417609979934723	0.0132454730360591	0.0296776221167990	-0.0166109220726865	-0.0250592630337318	0.0220011406966317
-4.82626303118637e-18	3.93564028673447e-18	5.55253317657570e-18	-2.91099403259807e-18	-6.08971846416628e-18	1.78721736803407e-18	6.41952569327192e-18	-6.02579159532637e-19	-6.53072367426563e-18	-6.02579159532637e-19	6.41952569327192e-18	1.78721736803407e-18	-6.08971846416628e-18	-2.91099403259807e-18	5.55253317657570e-18	3.93564028673447e-18	-4.82626303118637e-18
-0.00736769988845388	0.0101546706231828	0.00859610485499345	-0.0230773421357411	-0.0420855575209391	-0.0220354953735331	-0.000274249129333957	-0.0152891296078048	-0.0405745100571675	-0.0302405420423861	0.00323872321910141	0.0128023753610753	-0.00406057148512437	-0.00909805982660662	0.00509229351993320	0.00768224197323779	-0.00674473492262171
8.24315194095342e-18	-5.02664430805319e-19	1.62225423720869e-18	8.73249915308594e-18	5.40097395371777e-18	-5.18246707098277e-18	-8.29708587593398e-18	-4.90467540702084e-18	-7.65018795335151e-18	-1.39681506819225e-17	-8.58532373098828e-18	6.73088393992302e-18	1.15581685760310e-17	3.01460478217894e-19	-7.21458905847196e-18	1.64555146188876e-18	1.20702004684506e-17
0.00563899336389885	-0.00777204841723305	-0.00657917382175822	0.0176626329967378	0.0322108912102228	0.0168652380068174	0.000209901196273310	0.0117017931923789	0.0310543855504174	0.0231451088507222	-0.00247881143593248	-0.00979851389120508	0.00310782686658241	0.00696335352461751	-0.00389747272563709	-0.00587973345315560	0.00516219662116313
                ];

            testCase.assertLessThan(abs(zfi - expected), 1e-12)
        end


    end

end